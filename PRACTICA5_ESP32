#define Do_1 3822
#define Mi_1 3033
#define Do  1911
#define DoS  1803
#define Re  1702
#define ReS  1607
#define Mi  1516
#define Fa  1431
#define FaS 1351
#define Sol  1275
#define SolS  1203
#define La  1136
#define LaS  1072
#define Si  1012
#define Sim 2024
#define Do_2  955
#define Do2  955
#define Mim 3030
#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
Adafruit_SSD1306 display (128, 64, 23, 18, 16, 17, 5); //ESP32
volatile bool Running = false;
int tim = 500;
int tiempo = 0;
int lectura = 0;
int AUX1 = -1;
int MELODIA[] = {Re, Sol, Sim, Re, La, Mim, Sol, Sim, Re, La};
int TIEMPOS[] = {110, 61, 49, 220, 131, 61, 41, 220, 200, 200};
void IRAM_ATTR INCREMENTO()
{

  tim = tim + 1;
  Serial.println(tim);
}
void IRAM_ATTR DECREMENTO()
{

  tim = tim - 1;
  Serial.println(tim);
  //tiempo = tim;
}
void IRAM_ATTR Arranque()
{
  Running = true;

}
void IRAM_ATTR PARO()
{
  Running = false;
 
}
void setup()
{
  pinMode(22, OUTPUT);
  //for (int j = 0; j < 4; j++) pinMode(PININS[j], INPUT);
  pinMode(12, INPUT_PULLUP);
  pinMode(13, INPUT_PULLUP);
  pinMode(14, INPUT_PULLUP);
  pinMode(27, INPUT_PULLUP);
  for (int m = 0; m < 10; m++)
  {
    for (int t = 0; t < TIEMPOS[m]; t++)
    {
      digitalWrite(22, 0); delayMicroseconds(MELODIA[m]);
      digitalWrite(22, 1); delayMicroseconds(MELODIA[m]);
    }
    digitalWrite(22, 0);
    delay(250);
  }
  Serial.begin(9600);
  display.begin(SSD1306_SWITCHCAPVCC);
  display.clearDisplay();
  //display.drawBitmap(0  , 10, ABB_MONO, 128, 64, WHITE);
  //display.drawBitmap(30 , 5, ABB,      128, 64, WHITE);
  display.display();
  delay(500);
  display.clearDisplay();
  display.clearDisplay();
  display.setTextSize(1);
  //display.setFont(&FreeSansBold12pt7b));
  display.setTextColor(WHITE);
  display.setCursor(6, 0);
  display.println("-MICROCONTROLADORES-");
  display.display();
  display.setTextSize(1);
  //display.setFont(&FreeSansBold12pt7b));
  display.setTextColor(WHITE);
  display.setCursor(8, 10);
  display.println("-HUITZILIHUITL-");
  display.drawLine(0, 20, 150, 20, WHITE);
  display.display();
  delay(1000);
  display.clearDisplay();
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(8, 0);
  display.println("-JESUS_EMMANUEL-");
  display.display();
  display.setTextSize(1);
  //display.setFont(&FreeSansBold12pt7b));
  display.setTextColor(WHITE);
  display.setCursor(8, 10);
  display.println("-JORGE_ALBERTO-");
  display.drawLine(0, 20, 150, 20, WHITE);
  display.display();
  delay(1000);
  display.clearDisplay();
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(25, 0);
  display.println("-PRACTICA_5-");
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(25, 10);
  display.println("-Metronomo-");
  display.drawLine(0, 20, 150, 20, WHITE);
  display.display();
  delay(1000);
  display.clearDisplay();
  display.display();
  attachInterrupt(digitalPinToInterrupt(12), INCREMENTO, FALLING);
  attachInterrupt(digitalPinToInterrupt(13), DECREMENTO, FALLING);
  attachInterrupt(digitalPinToInterrupt(14), Arranque  , FALLING);
  attachInterrupt(digitalPinToInterrupt(27), PARO      , FALLING);
}
void loop()
{
  if (Running) {
S1:
    lectura = tim;
    display.fillRect(10, 0, 15, 30, WHITE);
    display.drawRect(30, 0, 15, 30, WHITE);
    display.drawRect(50, 0, 15, 30, WHITE);
    display.drawRect(70, 0, 15, 30, WHITE);
    display.setCursor(32, 34);
    display.println(lectura);
    display.display();
    display.clearDisplay();

    if (lectura < AUX1) {
      Serial.println("SE CAYO EL PORTON ");
      tim = 0;
      delay(100);
      goto S1;
    }
    else {
      Serial.println(" NO SE CAYO EL PORTON ");
      lectura = tim;
      tiempo = tim;
      delay(100);
      goto S2;
    }

S2:
    display.fillRect(10, 0, 15, 30, WHITE);
    display.drawRect(30, 0, 15, 30, WHITE);
    display.drawRect(50, 0, 15, 30, WHITE);
    display.drawRect(70, 0, 15, 30, WHITE);
    display.setCursor(32, 34);
    display.println(lectura);
    display.display();
    display.clearDisplay();
    for (int t = 0; t < 5; t++)
    {
      digitalWrite(22, 0); delayMicroseconds(Mi_1);
      digitalWrite(22, 1); delayMicroseconds(Mi_1);
     
    }
    delay(tiempo);
    display.drawRect(10, 0, 15, 30, WHITE);
    display.fillRect(30, 0, 15, 30, WHITE);
    display.drawRect(50, 0, 15, 30, WHITE);
    display.drawRect(70, 0, 15, 30, WHITE);
    display.setCursor(32, 34);
    display.println(lectura);
    display.display();
    display.clearDisplay();
     // remplazar por tim
    for (int t = 0; t < 5; t++)
    {
      digitalWrite(22, 0); delayMicroseconds(Do_1);
      digitalWrite(22, 1); delayMicroseconds(Do_1);
      
    }  
    delay(tiempo);
    display.drawRect(10, 0, 15, 30, WHITE); // no sumas nada
    display.drawRect(30, 0, 15, 30, WHITE); // suma +20
    display.fillRect(50, 0, 15, 30, WHITE); // suma +20
    display.drawRect(70, 0, 15, 30, WHITE); // suma +20
    display.setCursor(32, 34);
    display.println(lectura);
    display.display();
    display.clearDisplay();
    
    for (int t = 0; t < 5; t++)
    {
      digitalWrite(22, 0); delayMicroseconds(Do_1);
      digitalWrite(22, 1); delayMicroseconds(Do_1);
      
    }
    delay(tiempo);
    display.drawRect(10, 0, 15, 30, WHITE);
    display.drawRect(30, 0, 15, 30, WHITE);
    display.drawRect(50, 0, 15, 30, WHITE);
    display.fillRect(70, 0, 15, 30, WHITE);
    display.setCursor(32, 34);
    display.println(lectura);
    display.display();
    display.clearDisplay();
    
    for (int t = 0; t < 5; t++)
    {
      digitalWrite(22, 0); delayMicroseconds(Do_1);
      digitalWrite(22, 1); delayMicroseconds(Do_1);
      
    }
      delay(tiempo);
    
  }
  
}
