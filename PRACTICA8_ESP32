#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
Adafruit_SSD1306 display (128, 64, 23, 18, 16, 17, 5); //ESP32
const int freq = 5000;
const int pwmChannel = 0;
const int resolucion = 8;
int DUTY             = 0;
int Entrada          = 0;
static const unsigned char PROGMEM logo_tecnm[] = //logo del tecnm
{ 
    0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7e, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7c, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf8, 0x00, 0x78, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xe0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x3e, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x0f, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x03, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x00, 0xf8, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x00, 0x3e, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x00, 0x1f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xf0, 0x0f, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0x0e, 0x07, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x03, 0x85, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x81, 0xe7, 0xe4, 0x60, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf0, 0x3d, 0xf4, 0x30, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x9f, 0x0a, 0xcc, 0x10, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x81, 0xfd, 0x84, 0x18, 0x03, 0xff, 0xfc, 0x11, 0x8b, 0xd8, 0xdf, 0x1c, 0x2c, 0x63, 0xff, 0xff,
  0xe0, 0x17, 0x04, 0x08, 0x01, 0xff, 0xff, 0x77, 0x29, 0xd2, 0x5e, 0x4b, 0xe9, 0x49, 0xff, 0xff,
  0xb8, 0x10, 0x06, 0x0c, 0x01, 0xff, 0xff, 0x77, 0x79, 0xd7, 0x5e, 0xeb, 0xeb, 0xdd, 0xff, 0xff,
  0x87, 0xff, 0xff, 0x84, 0x01, 0xff, 0xff, 0x73, 0x7a, 0xd7, 0x5e, 0xeb, 0xeb, 0xdd, 0xff, 0xff,
  0x80, 0xf0, 0x09, 0xc4, 0x01, 0xff, 0xff, 0x73, 0x7b, 0x57, 0x5e, 0xea, 0x2b, 0xdd, 0xff, 0xff,
  0x80, 0x40, 0x30, 0xce, 0x01, 0xff, 0xff, 0x77, 0x7b, 0x97, 0x5e, 0xeb, 0xab, 0xdd, 0xff, 0xff,
  0xff, 0xfe, 0x6b, 0xee, 0x07, 0xff, 0xff, 0x77, 0x2b, 0x92, 0x5e, 0x49, 0xa9, 0x49, 0xff, 0xff,
  0x80, 0x0d, 0xdb, 0xfe, 0x0f, 0xff, 0xff, 0x71, 0x8b, 0xd8, 0xc3, 0x1c, 0x2c, 0x63, 0xff, 0xff,
  0x80, 0x1a, 0x81, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0x8d, 0x81, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x83, 0x7f, 0x81, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x86, 0xa7, 0x81, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x89, 0xa7, 0x87, 0xfe, 0x0f, 0xbd, 0x0c, 0x58, 0xde, 0x85, 0xf1, 0x8d, 0xe8, 0xba, 0xc6, 0x3f,
  0x91, 0x27, 0x87, 0xfe, 0x07, 0x9d, 0x69, 0x52, 0x4e, 0xb5, 0xf0, 0xbc, 0xcb, 0x92, 0x94, 0x9f,
  0xa2, 0x66, 0xcf, 0xfe, 0x01, 0x9d, 0x6b, 0xd7, 0x4e, 0xb5, 0xf6, 0xbc, 0xcb, 0xc6, 0xbd, 0xdf,
  0xc6, 0x45, 0x3f, 0xfc, 0x01, 0xad, 0x6b, 0xd7, 0x56, 0xb5, 0xf6, 0x9c, 0x09, 0xee, 0xbd, 0xdf,
  0x84, 0x44, 0x87, 0xfc, 0x01, 0xb5, 0x0b, 0xd7, 0x5a, 0x85, 0xf6, 0x9d, 0x29, 0xee, 0xbd, 0xdf,
  0x8c, 0x44, 0xc3, 0x80, 0x01, 0xb9, 0x6b, 0xd7, 0x5c, 0xb5, 0xf6, 0xbd, 0x2b, 0xc6, 0xbd, 0xdf,
  0x88, 0x46, 0x3f, 0x80, 0x01, 0xb9, 0x69, 0x52, 0x5c, 0xb5, 0xf0, 0xbd, 0xeb, 0x92, 0x94, 0x9f,
  0x98, 0xc6, 0x01, 0x80, 0x03, 0xbd, 0x6c, 0x58, 0xde, 0xb4, 0x31, 0x8d, 0xe8, 0xba, 0xc6, 0x3f,
  0x90, 0xc3, 0x01, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xb0, 0xc3, 0x01, 0x80, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xe0, 0xc1, 0x81, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xe0, 0xc1, 0xc1, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xc0, 0xc0, 0xe3, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xc0, 0xc0, 0x7f, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0xc0, 0x3e, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0xc0, 0x1c, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0xc0, 0x38, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x80, 0xc0, 0x30, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xe0, 0xc0, 0x60, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xc1, 0xc0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x9f, 0xff, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0x83, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xc0, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xf0, 0x00, 0x78, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7c, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7e, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xfe, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
 };


 static const unsigned char PROGMEM logo_its[] = //logo de its 
{ 
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x7e, 0x4f, 0xf9, 0x3f, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xbd, 0xf7, 0xf7, 0xde, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xbb, 0x37, 0xf6, 0x6e, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xb7, 0x57, 0xf5, 0x76, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0x8f, 0x07, 0xf0, 0x78, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x1f, 0x80, 0x00, 0xfc, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0x3f, 0xbf, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xbf, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfd, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xef, 0xdf, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfd, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xdf, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf9, 0x34, 0x00, 0x00, 0x00, 0x00, 0x16, 0x4f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x35, 0xff, 0xff, 0xff, 0xff, 0xd6, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x0d, 0x80, 0x00, 0x00, 0x00, 0x58, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf1, 0x1d, 0x7f, 0xfe, 0x7f, 0xff, 0x5c, 0x87, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x1d, 0x70, 0x06, 0x7f, 0xff, 0x5c, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x3d, 0x70, 0x06, 0x71, 0xf1, 0x5e, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf1, 0xfd, 0x78, 0x1e, 0x76, 0xed, 0x5f, 0xc7, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf1, 0xfd, 0x7c, 0x3c, 0x37, 0x5d, 0x5f, 0xc7, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf9, 0xfd, 0x7c, 0x38, 0x1b, 0xbb, 0x5f, 0xcf, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf9, 0xfd, 0x7c, 0x30, 0x0d, 0xf7, 0x5f, 0xcf, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xe1, 0xfd, 0x7c, 0x20, 0x01, 0xb1, 0x5f, 0xc3, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xcc, 0xfd, 0x7c, 0x20, 0x07, 0x5d, 0x5f, 0x99, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xde, 0xfd, 0x7c, 0x20, 0x01, 0xb1, 0x5f, 0xbd, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xd0, 0xfd, 0x7c, 0x20, 0x05, 0xf7, 0x5f, 0x85, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xd4, 0xfd, 0x7c, 0x30, 0x0b, 0xbb, 0x5f, 0x95, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc4, 0xfd, 0x7c, 0x30, 0x07, 0x5d, 0x5f, 0xd1, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc1, 0xfd, 0x78, 0x10, 0x06, 0xed, 0x5f, 0xc1, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0x70, 0x00, 0x01, 0xf1, 0x5f, 0xf9, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0x70, 0x08, 0x1f, 0xff, 0x5f, 0xf9, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0x7f, 0xf8, 0x1f, 0xff, 0x5f, 0xf9, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x5f, 0xf9, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0x7f, 0xfc, 0x3f, 0xff, 0x5f, 0xf9, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xdf, 0xfd, 0x7f, 0xfc, 0x20, 0x07, 0x5f, 0xf9, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc1, 0xfd, 0x77, 0xdc, 0x00, 0x03, 0x5f, 0xc1, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc4, 0xfd, 0x63, 0x8c, 0x0c, 0x33, 0x5f, 0x91, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xd4, 0xfd, 0x41, 0x04, 0x3c, 0x3f, 0x5f, 0x95, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xd0, 0xfd, 0x41, 0x04, 0x3c, 0x3f, 0x5f, 0x85, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xde, 0xfd, 0x41, 0x04, 0x3c, 0x3f, 0x5f, 0xbd, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xcc, 0xfd, 0x41, 0x04, 0x3c, 0x3f, 0x5f, 0x99, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xe0, 0xfd, 0x63, 0x8c, 0x3c, 0x3f, 0x5f, 0x83, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf9, 0xfd, 0x77, 0xdc, 0x3c, 0x3f, 0x5f, 0xcf, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfb, 0xfd, 0x77, 0xdc, 0x3c, 0x3f, 0x5f, 0xef, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf3, 0xfd, 0x3f, 0xfe, 0x7c, 0x3e, 0xdf, 0xe7, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf7, 0xfd, 0x80, 0x00, 0x7c, 0x3e, 0x9f, 0xf7, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf7, 0xfc, 0xdf, 0xfe, 0x78, 0x1d, 0xbf, 0xf7, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf6, 0x3e, 0x6f, 0xfe, 0x78, 0x1b, 0x3e, 0x37, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf4, 0x1f, 0x33, 0xfe, 0x7f, 0xf6, 0x7c, 0x17, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0x98, 0x0e, 0x78, 0x0c, 0xf8, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x8f, 0xcf, 0xe0, 0x03, 0xf9, 0xf8, 0x87, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf0, 0x07, 0xe0, 0xfe, 0x3f, 0x83, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xf8, 0x1b, 0xfc, 0x02, 0x20, 0x1f, 0xec, 0x0f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfc, 0x1d, 0xff, 0xf9, 0xcf, 0xff, 0xdc, 0x1f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xfe, 0x7e, 0xff, 0xfc, 0x9f, 0xff, 0xbf, 0x3f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0x7f, 0x7f, 0xfe, 0x3f, 0xff, 0x7f, 0x7f, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xbf, 0xff, 0xff, 0xfe, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xcf, 0x00, 0x00, 0x79, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xd7, 0x4f, 0xf9, 0x75, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xdb, 0x2f, 0xfa, 0x6d, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0x9d, 0xef, 0xfb, 0xdc, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3e, 0x9f, 0xfc, 0xbe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

static const unsigned char PROGMEM logo_omega[] = //mapa de bits del logo de equipo
{
    0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x7e, 0x00, 0x3f, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0xff, 0x00, 0x3f, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0xff, 0x00, 0x3f, 0xc0, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x01, 0xff, 0x80, 0x7f, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x01, 0xff, 0x80, 0x7f, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x03, 0xff, 0x80, 0x7f, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xc0, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xc0, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x03, 0xff, 0xc0, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xe1, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xe1, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x07, 0xff, 0xf1, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xf1, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xf1, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x0f, 0xf7, 0xf9, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0xe7, 0xf9, 0xfc, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0xe7, 0xf9, 0xf8, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0xe3, 0xfd, 0xf8, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x1f, 0xe3, 0xfd, 0xf8, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xc3, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xc1, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x3f, 0xc1, 0xff, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0x81, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0x80, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0x80, 0xff, 0xe0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0x80, 0x7f, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0x00, 0x7f, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0xff, 0x00, 0x7f, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xfe, 0x00, 0x3f, 0xc0, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xfe, 0x00, 0x3f, 0x80, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff
};
void setup() {
  Serial.begin(9600);
  ledcSetup(pwmChannel, freq, resolucion);
  ledcAttachPin(13, pwmChannel);
  pinMode(15 , INPUT_PULLUP);
  pinMode(19 , INPUT_PULLUP);
  pinMode(4  , OUTPUT);
  pinMode(14 , OUTPUT);
  Serial.begin(9600);
  display.begin(SSD1306_SWITCHCAPVCC);
  display.clearDisplay();
  display.drawBitmap(0  , 10, ABB_MONO, 128, 64, WHITE);
  display.drawBitmap(30 , 5, ABB,      128, 64, WHITE);
  display.display();
  delay (1000);
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(6, 0);
  display.println("-MICROCONTROLADORES-");
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(8, 10);
  display.println("-HUITZILIHUITL-");
  display.drawLine(0, 20, 150, 20, WHITE);
  display.display();
  delay(1000);
  display.clearDisplay();
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(8, 0);
  display.println("-JESUS_EMMANUEL-");
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(8, 10);
  display.println("-JORGE_ALBERTO-");
  display.drawLine(0, 20, 150, 20, WHITE);
  display.display();
  delay(1000);
  display.clearDisplay();
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(25, 0);
  display.println("-PRACTICA_8-");
  display.display();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(25, 10);
  display.println("-PWM_MOT-");
  display.drawLine(0, 20, 150, 20, WHITE);
  display.display();
  delay(500);
  display.clearDisplay();
  display.display();

}

void loop() {
Estado1:
  digitalWrite(14, 0);
  digitalWrite(4 , 0);
  delay(10);
  PWM(0);
  Serial.println(DUTY);
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("-S1-");
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(60,0);
  display.println("-PARO-");
  display.display();
  
  if (digitalRead(15) == 1 && digitalRead(19) == 0) goto Estado2;
    
  if (digitalRead(15) == 0 && digitalRead(19) == 1) goto Estado3;
    
  if (digitalRead(15) == 0 && digitalRead(19) == 0) goto Estado1;
    
  if (digitalRead(15) == 1 && digitalRead(19) == 1) goto Estado1;
    
Estado2:
  digitalWrite(14, 1);
  digitalWrite(4 , 0);
  delay(10);
  Entrada = analogRead(35);
  DUTY    = map(Entrada , 0, 1024, 0, 300);
  
  PWM(DUTY);
  Serial.println(DUTY);
  delay(10);
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("-S2-");
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(25,0);
  display.println("DER");
  display.display();
  if (digitalRead(15) == 1 && digitalRead(19) == 0) goto Estado2;
    
  if (digitalRead(15) == 0 && digitalRead(19) == 1) goto Estado3;
    
  if (digitalRead(15) == 0 && digitalRead(19) == 0) goto Estado1;
    
  if (digitalRead(15) == 1 && digitalRead(19) == 1) goto Estado1;
    
Estado3:
  digitalWrite(14, 0);
  digitalWrite(4 , 1);
  delay(10);
  Entrada = analogRead(35);
  DUTY    = map(Entrada , 0, 4095, 0, 255);
  Serial.println(DUTY);
  delay(10);
  PWM(DUTY);
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("-S3-");
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(100,0);
  display.println("IZQ");
  display.display();
  if (digitalRead(15) == 1 && digitalRead(19) == 0) goto Estado2;
    
  if (digitalRead(15) == 0 && digitalRead(19) == 1) goto Estado3;
    
  if (digitalRead(15) == 0 && digitalRead(19) == 0) goto Estado1;
   
  if (digitalRead(15) == 1 && digitalRead(19) == 1) goto Estado1;
   

}
void PWM (int a)
{
ledcWrite(0,a);
delay(20);
}
